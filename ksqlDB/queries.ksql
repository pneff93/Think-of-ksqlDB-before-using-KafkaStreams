CREATE STREAM SENSOR_DATA_RAW(
    "sensorId" VARCHAR KEY,
    "value" ARRAY<STRUCT<"type" VARCHAR, "value" DOUBLE, "unit" VARCHAR>>,
    "timestamp" VARCHAR
) WITH (
    KAFKA_TOPIC = 'sensor-data-raw',
    VALUE_FORMAT = 'AVRO',
    VALUE_AVRO_SCHEMA_FULL_NAME = 'com.kafkaSummitEurope.SensorData'
);


-- We need to transform from Fahrenheit to Celsius
CREATE STREAM SENSOR_DATA_TRANSFORMED
WITH (
    KAFKA_TOPIC = 'sensor-data-transformed',
    VALUE_FORMAT = 'AVRO',
    VALUE_AVRO_SCHEMA_FULL_NAME = 'com.kafkaSummitEurope.SensorData'
) AS SELECT
    "sensorId",
    TRANSFORM("value", (value) =>
        STRUCT(
        "type" := value->"type",
        "value" :=
            CASE WHEN value->"type" = 'temperature' AND value->"unit" = 'Fahrenheit'
            THEN (value->"value" - 32) / 1.8
            ELSE value->"value" END,
        "unit" :=
            CASE WHEN value->"type" = 'temperature' AND value->"unit" = 'Fahrenheit'
            THEN 'Celsius'
            ELSE value->"unit" END
        )
    ) AS "value",
    "timestamp"
    FROM SENSOR_DATA_RAW
    PARTITION BY "sensorId";


-- We want to have data per value
CREATE STREAM SENSOR_DATA_PER_VALUE
WITH (
    KAFKA_TOPIC = 'sensor-data-per-value',
    VALUE_FORMAT = 'AVRO',
    VALUE_AVRO_SCHEMA_FULL_NAME = 'com.kafkaSummitEurope.SensorDataPerValue'
) AS SELECT
    "sensorId",
    EXPLODE("value")->"type" AS "type",
    ROUND(EXPLODE("value")->"value", 1) AS "value",
    EXPLODE("value")->"unit" AS "unit",
    "timestamp"
    FROM SENSOR_DATA_TRANSFORMED
    PARTITION BY "sensorId";


-- We finally aggregate
set 'ksql.suppress.enabled'='true';
CREATE TABLE SENSOR_DATA_AGGREGATION
WITH (
    KAFKA_TOPIC = 'sensor-data-aggregation',
    KEY_FORMAT = 'AVRO',
    VALUE_FORMAT = 'AVRO',
    VALUE_AVRO_SCHEMA_FULL_NAME = 'com.kafkaSummitEurope.SensorDataAggregation'
) AS SELECT
    "sensorId",
    "type",
    ROUND(AVG("value"), 1) AS "valueAvg",
    COUNT("value") AS "count",
    LATEST_BY_OFFSET("unit") AS "unit",
    LATEST_BY_OFFSET("timestamp") AS "timestamp"
    FROM SENSOR_DATA_PER_VALUE
    WINDOW TUMBLING (SIZE 10 SECONDS)
    GROUP BY "sensorId", "type"
    EMIT FINAL;

-- All in one
set 'ksql.suppress.enabled'='true';
CREATE STREAM TEST
WITH (
    KAFKA_TOPIC = 'test',
    VALUE_FORMAT = 'AVRO',
    VALUE_AVRO_SCHEMA_FULL_NAME = 'com.kafkaSummitEurope.test'
) AS SELECT
    "sensorId",
    LATEST_BY_OFFSET(EXPLODE("value")->"type") AS "type",
    AVG(CASE WHEN EXPLODE("value")->"type" = 'temperature' AND EXPLODE("value")->"unit" = 'Fahrenheit'
         THEN ROUND((EXPLODE("value")->"value" - 32) / 1.8, 1)
         ELSE ROUND(EXPLODE("value")->"value", 1)
         END) AS "value",
    LATEST_BY_OFFSET(EXPLODE("value")->"unit") AS "unit",
    "timestamp"
    FROM SENSOR_DATA_RAW
     GROUP BY "sensorId" EMIT CHANGES;
